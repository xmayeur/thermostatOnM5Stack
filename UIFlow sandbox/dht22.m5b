{"category":"dht22","color":"#00b7b7","blocks":["__dht22_init","__dht22_temperature","__dht22_humidity"],"jscode":"// Block __dht22_init\nvar __dht22_init_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"dht init\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"pin\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"pin\"\n        }\n    ],\n    \"colour\": \"#00b7b7\"\n};\n\nwindow['Blockly'].Blocks['__dht22_init'] = {\n    init: function() {\n        this.jsonInit(__dht22_init_json);\n    }\n};\n\nwindow['Blockly'].Python['__dht22_init'] = function(block) {\n    var pin = block.getFieldValue('pin');\n    return `from machine import Pin\nfrom esp import dht_readinto\n\nDHT_PIN = ${pin}\nbuf = bytearray(5)\n\n\ndef humidity():\n    dht_readinto(DHT_PIN, buf)\n    return (buf[0] << 8 | buf[1]) * 0.1\n\ndef temperature():\n    dht_readinto(DHT_PIN, buf)\n    t = ((buf[2] & 0x7F) << 8 | buf[3]) * 0.1\n    if buf[2] & 0x80:\n        t = -t\n    return t\n` + \"\\n\";\n};\n\n// Block __dht22_temperature\nvar __dht22_temperature_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"read temperature\"\n        }\n    ],\n    \"colour\": \"#00b7b7\"\n};\n\nwindow['Blockly'].Blocks['__dht22_temperature'] = {\n    init: function() {\n        this.jsonInit(__dht22_temperature_json);\n    }\n};\n\nwindow['Blockly'].Python['__dht22_temperature'] = function(block) {\n        return [`temperature()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __dht22_humidity\nvar __dht22_humidity_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"read humidity\"\n        }\n    ],\n    \"colour\": \"#00b7b7\"\n};\n\nwindow['Blockly'].Blocks['__dht22_humidity'] = {\n    init: function() {\n        this.jsonInit(__dht22_humidity_json);\n    }\n};\n\nwindow['Blockly'].Python['__dht22_humidity'] = function(block) {\n        return [`humidity()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","code":{"init":["window['Blockly'].Python['__dht22_init'] = function(block) {\n    var pin = block.getFieldValue('pin');\n    return `from machine import Pin\nfrom esp import dht_readinto\n\nDHT_PIN = ${pin}\nbuf = bytearray(5)\n\n\ndef humidity():\n    dht_readinto(DHT_PIN, buf)\n    return (buf[0] << 8 | buf[1]) * 0.1\n\ndef temperature():\n    dht_readinto(DHT_PIN, buf)\n    t = ((buf[2] & 0x7F) << 8 | buf[3]) * 0.1\n    if buf[2] & 0x80:\n        t = -t\n    return t\n` + \"\\n\";\n};\n\n","from machine import Pin\nfrom esp import dht_readinto\n\nDHT_PIN = ${pin}\nbuf = bytearray(5)\n\n\ndef humidity():\n    dht_readinto(DHT_PIN, buf)\n    return (buf[0] << 8 | buf[1]) * 0.1\n\ndef temperature():\n    dht_readinto(DHT_PIN, buf)\n    t = ((buf[2] & 0x7F) << 8 | buf[3]) * 0.1\n    if buf[2] & 0x80:\n        t = -t\n    return t\n"],"temperature":["window['Blockly'].Python['__dht22_temperature'] = function(block) {\n        return [`temperature()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","temperature()"],"humidity":["window['Blockly'].Python['__dht22_humidity'] = function(block) {\n        return [`humidity()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","humidity()"]}}